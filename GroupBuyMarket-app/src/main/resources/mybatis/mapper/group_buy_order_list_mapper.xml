<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ant0n.gbm.infrastructure.dao.IGroupBuyOrderListDao">

    <resultMap id="dataMap" type="cn.ant0n.gbm.infrastructure.dao.po.GroupBuyOrderList">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="team_id" property="teamId"/>
        <result column="order_id" property="orderId"/>
        <result column="activity_id" property="activityId"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="product_id" property="productId"/>
        <result column="source" property="source"/>
        <result column="channel" property="channel"/>
        <result column="original_price" property="originalPrice"/>
        <result column="deduction_price" property="deductionPrice"/>
        <result column="status" property="status"/>
        <result column="out_trade_no" property="outTradeNo"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="queryLockedGroupBuyOrderList" resultMap="dataMap" parameterType="cn.ant0n.gbm.infrastructure.dao.po.GroupBuyOrderList">
        select user_id, team_id, order_id, activity_id, start_time, end_time, product_id, source, channel, original_price, deduction_price, status, out_trade_no from group_buy_order_list
        where user_id = #{userId} and out_trade_no = #{outTradeNo} and status = 0 limit 1
    </select>

    <insert id="insert" parameterType="cn.ant0n.gbm.infrastructure.dao.po.GroupBuyOrderList">
        insert into group_buy_order_list
        (user_id, team_id, order_id, activity_id, start_time, end_time, product_id, source, channel, original_price, deduction_price, status, out_trade_no)
        values (#{userId}, #{teamId}, #{orderId}, #{activityId}, #{startTime}, #{endTime}, #{productId}, #{source}, #{channel},
                #{originalPrice}, #{deductionPrice}, #{status}, #{outTradeNo})
    </insert>

    <select id="queryUserTakeCount" resultType="java.lang.Integer">
        select count(*) from group_buy_order_list
        where user_id = #{userId} and activity_id = #{activityId} and status != 3
    </select>

    <select id="queryGroupBuyOrderListByOutTradeNo" resultMap="dataMap">
        select user_id, team_id, order_id, activity_id, start_time, end_time, product_id, source, channel, original_price, deduction_price, status, out_trade_no from group_buy_order_list
        where out_trade_no = #{outTradeNo} and status = 0
    </select>

    <update id="update2Complete">
        update group_buy_order_list
        set
            status = 1,
            update_time = now()
        where out_trade_no = #{outTradeNo} and status = 0
    </update>

    <select id="queryGroupBuyOrderListByTeamId" resultMap="dataMap">
        select user_id, team_id, order_id, product_id, out_trade_no from group_buy_order_list
        where team_id = #{teamId} and status = 1
    </select>

    <update id="cancel">
        update group_buy_order_list
        set
            status = 2,
            update_time = now()
        where
            team_id = #{teamId} and status != 2
    </update>

    <select id="queryGroupBuyTeamsEntity" resultMap="dataMap" parameterType="cn.ant0n.gbm.infrastructure.dao.po.GroupBuyOrderList">
        select user_id, team_id from group_buy_order_list
        where
            activity_id = #{activityId} and
            status = 0
    </select>

    <select id="queryGroupBuyListByTeamIdsLimit1" resultMap="dataMap" parameterType="java.util.List">
        select user_id, team_id from group_buy_order_list
        where team_id in
        <foreach item="teamId" collection="teamIds" open="(" separator="," close=")">
            #{teamId}
        </foreach>
    </select>

</mapper>